<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="$(arg robot_model)_robot">
  <!--
    This file wraps the original UR3 Gazebo model and attaches it to a cylindrical support,
    so that the robot stands on a fixed base (like a table or pedestal).
  -->

  <!-- Declare arguments (pass through to the original macro) -->
  <xacro:arg name="joint_limit_params" default=""/>
  <xacro:arg name="physical_params" default=""/>
  <xacro:arg name="kinematics_params" default=""/>
  <xacro:arg name="visual_params" default=""/>
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>

  

  <!-- Include the original UR3 Gazebo robot description -->
  <xacro:include filename="$(find ur_gazebo)/urdf/ur_macro.xacro"/>
  <xacro:include filename="$(find realsense2_description)/urdf/_d415.urdf.xacro"/>
  <!-- Instantiate the UR3 robot for Gazebo -->
  <xacro:ur_robot_gazebo
      prefix=""
      joint_limits_parameters_file="$(arg joint_limit_params)"
      kinematics_parameters_file="$(arg kinematics_params)"
      physical_parameters_file="$(arg physical_params)"
      visual_parameters_file="$(arg visual_params)"
      transmission_hw_interface="$(arg transmission_hw_interface)"
      safety_limits="$(arg safety_limits)"
      safety_pos_margin="$(arg safety_pos_margin)"
      safety_k_position="$(arg safety_k_position)"
  />

  <!-- Define a cylinder support link -->
  <link name="cylinder_support">
    <visual name="cylinder_support_visual">
      <origin xyz="0 0 0.5" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.07" length="1"/>
      </geometry>
    </visual>
    <collision name="cylinder_support_collision">
      <origin xyz="0 0 0.5" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.07" length="1"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0.5" rpy="0 0 0"/>
      <mass value="5.0"/>
      <inertia ixx="0.1" iyy="0.1" izz="0.1" ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

    <gazebo reference="cylinder_support">
      <material>Gazebo/Blue</material>
    </gazebo>

    
  <!-- Define the world link -->
  <link name="world"/>

  <!-- Attach the cylinder support to the world -->
  <joint name="world_to_cylinder" type="fixed">
    <parent link="world"/>
    <child link="cylinder_support"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <!-- Attach the robot's base to the cylinder support -->
  <joint name="cylinder_to_robot" type="fixed">
    <parent link="cylinder_support"/>
    <child link="base_link"/>
    <origin xyz="0 0 1" rpy="0 0 0"/>
  </joint>


  <xacro:include filename="$(find realsense2_description)/urdf/_d415.urdf.xacro" />

  <xacro:sensor_d415 name="camera" topics_ns="camera" parent="base_link" publish_pointcloud="true">
    <origin xyz="-0.4 0 0.55" rpy="0 1.57 3.14"/>
  </xacro:sensor_d415>

<link name="pointer_base">
  <visual name="pointer_base_visual">
    <origin xyz="0 0 0.025" rpy="0 0 0"/>
    <geometry>
      <cylinder radius="0.02" length="0.05"/>
    </geometry>
  </visual>
  <collision name="pointer_base_collision">
      <origin xyz="0 0 0.025" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.02" length="0.05"/>
      </geometry>
    </collision>
  <inertial>
    <mass value="0.1"/>
    <inertia ixx="0.00002" iyy="0.000093" izz="0.000093" ixy="0" ixz="0" iyz="0"/>
  </inertial>
</link>

<gazebo reference="pointer_base">
  <material>Gazebo/Grey</material>
</gazebo>

<joint name="laser_to_eef" type="fixed">
  <parent link="tool0"/>
  <child link="pointer_base"/>
  <origin xyz="0 0 0" rpy="0 0 0"/>
</joint>

<link name="laser_beam">
  <visual name="laser_beam_visual">
    <origin xyz="0 0 0.55" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.005" length="1.0"/>
      </geometry>
  </visual>
  <inertial>
    <mass value="0.01"/>
    <inertia ixx="0.00002" iyy="0.000093" izz="0.000093" ixy="0" ixz="0" iyz="0"/>
  </inertial>
</link>

<gazebo reference="laser_beam">
  <visual name="laser_beam_visual">
    <transparency>1.0</transparency>
  </visual>
  <material>Gazebo/RedGlow</material>
</gazebo>


<joint name="beam_to_laser" type="fixed">
  <parent link="pointer_base"/>
  <child link="laser_beam"/>
  <origin xyz="0 0 0" rpy="0 0 0"/>
</joint>



<gazebo>
  <plugin name="laser_pointer_controller" filename="liblaser_pointer_plugin.so">
    <laser_link_name>laser_beam</laser_link_name>
    <topicName>/set_laser_pointer</topicName>
  </plugin>
</gazebo>


</robot>
